<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article>
  <title>Advanced configuration and maintainance of simpleSAMLphp</title>

  <articleinfo>
    <date>2007-08-30</date>

    <pubdate>Thu Mar 27 07:41:25 2008</pubdate>

    <author>
      <firstname>Andreas Ã…kre</firstname>

      <surname>Solberg</surname>

      <email>andreas.solberg@uninett.no</email>
    </author>
  </articleinfo>

  <warning>
    <para>This document is in progress of beeing written.</para>
  </warning>

  <section>
    <title>simpleSAMLphp documentation</title>

    <para>This document is part of the simpleSAMLphp documentation
    suite.</para>

    <itemizedlist>
      <listitem>
        <para><ulink url="http://rnd.feide.no/view/simplesamlphpdocs">List of
        all simpleSAMLphp documentation</ulink></para>
      </listitem>
    </itemizedlist>

    <para>This document assumes that you already have a installation of
    simpleSAMLphp running, configured and working. This is the next step
    :)</para>
  </section>

  <section>
    <title>Session management</title>

    <para>simpleSAMLphp has an abstraction layer for session management. That
    means it is possible to choose between different kind of session stores,
    as well as write new session store plugins.</para>

    <para>The <literal>session.handler</literal> configuration option in
    <filename>config.php</filename> allows you to select which session handler
    SimpleSAMLPHP should use to store the session information. Currently we
    have two session handlers:</para>

    <itemizedlist>
      <listitem>
        <para>PHPSESSION is using the built in session management in PHP. This
        is the default, and is simplest to use. But it will not work in a
        load-balanced environement.</para>
      </listitem>

      <listitem>
        <para>memcache is using the memcache software to cache sessions in
        memory. Sessions can be distributed and replicated among several
        memcache servers, enabling both load-balancing and fail-over.</para>
      </listitem>
    </itemizedlist>

    <programlisting> 'session.handler'       =&gt; 'phpsession',</programlisting>

    <section>
      <title>Configuring memcache</title>

      <para>To use the memcache session handler, set the session.handler
      parameter in <literal>config.php</literal>:</para>

      <programlisting>'session.handler'       =&gt; 'memcache',</programlisting>

      <para>Memcache allows you to store multiple redudant copies of sessions
      on different memcache servers.</para>

      <para>The configuration parameter
      <literal>memcache_store.servers</literal> is an array of server groups.
      Every data item will be mirrored in every server group.</para>

      <para>Each server group is an array of servers. The data items will be
      load-balanced between all servers in each server group.</para>

      <para>Each server is an array of parameters for the server. The
      following options are available:</para>

      <glosslist>
        <glossentry>
          <glossterm><literal>hostname</literal></glossterm>

          <glossdef>
            <para>This is the hostname or ip address where the memcache server
            runs. This is the only required option.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm><literal>port</literal></glossterm>

          <glossdef>
            <para>This is the port number of the memcache server. If this
            option isn't set, then we will use the
            <literal>memcache.default_port</literal> ini setting. This is
            11211 by default.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm><literal>weight</literal></glossterm>

          <glossdef>
            <para>This sets the weight of this server in this server group.
            <ulink
            url="http://php.net/manual/en/function.Memcache-addServer.php">http://php.net/manual/en/function.Memcache-addServer.php</ulink>
            contains more information about the weight option.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm><literal>timeout</literal></glossterm>

          <glossdef>
            <para>The timeout for this server. By default, the timeout is 3
            seconds.</para>
          </glossdef>
        </glossentry>
      </glosslist>

      <para>Here are two examples of configuration of memcache session
      handling:</para>

      <example>
        <title>Example of redudant configuration with load balancing</title>

        <para>Example of redudant configuration with load balancing: This
        configuration makes it possible to lose both servers in the a-group or
        both servers in the b-group without losing any sessions. Note that
        sessions will be lost if one server is lost from both the a-group and
        the b-group.</para>

        <programlisting>'memcache_store.servers' =&gt; array(
	array(
		array('hostname' =&gt; 'mc_a1'),
		array('hostname' =&gt; 'mc_a2'),
	),
	array(
		array('hostname' =&gt; 'mc_b1'),
		array('hostname' =&gt; 'mc_b2'),
	),
),</programlisting>
      </example>

      <example>
        <title>Example of simple configuration with only one memcache
        server</title>

        <para>Example of simple configuration with only one memcache server,
        running on the same computer as the web server: Note that all sessions
        will be lost if the memcache server crashes.</para>

        <programlisting>'memcache_store.servers' =&gt; array(
	array(
		array('hostname' =&gt; 'localhost'),
	),
),</programlisting>
      </example>

      <para>The expiration value (<literal>memcache_store.expires</literal>)
      is the duration data should be stored in memcache. Datawill be dropped
      from the memcache servers when this time expires. The time will be reset
      every time the data is written to the memcache servers.</para>

      <para>This value should always be larger than the
      <literal>session.duration</literal> option. Not doing this may result in
      the session being deleted from the memcache servers while it is still in
      use.</para>

      <para>Set this value to 0 if you don't want data to expire.</para>

      <note>
        <para>The oldest data will always be deleted if the memcache server
        runs out of storage space.</para>
      </note>

      <example>
        <title>Example of configuration setting for session expiration</title>

        <para>Here is an example of this configuration parameter:</para>

        <programlisting>'memcache_store.expires' =&gt;  36 * (60*60), // 36 hours.</programlisting>
      </example>

      <section>
        <title>Memcache PHP configuration</title>

        <para>Configure memcahce to not do internal failover. This parameter
        is configured in <filename>php.ini</filename>.</para>

        <programlisting>memcache.allow_failover = Off</programlisting>
      </section>

      <section>
        <title>Environmental configuration</title>

        <para>Setup a firewall restricting access to the memcache
        server.</para>

        <para>Because simpleSAMLphp uses a timestamp to check which session is
        most recent in a fail-over setup, it is very important to run
        syncrhonized clocks on all webservers where you run
        simpleSAMLphp.</para>
      </section>
    </section>
  </section>

  <section>
    <title>Load balancing and failover</title>

    <para></para>
  </section>

  <section>
    <title>Logging and statistics</title>

    <para>Supports standard syslog logging. Also possible to configure
    flatfile logging.</para>
  </section>

  <section>
    <title>Apache configuration</title>

    <para></para>
  </section>

  <section>
    <title>PHP configuration</title>

    <para>Secure cookies (if you run HTTPS).</para>

    <para>Turn off PHPSESSID in query string.</para>
  </section>

  <section>
    <title>Getting ready for production</title>

    <para>Here are some steps that should be checked</para>

    <itemizedlist>
      <listitem>
        <para>Remove all entities in metadata files that you do not trust. It
        is easy to forget about some of the entities that were used for
        test.</para>
      </listitem>

      <listitem>
        <para>Switch signing certificate if you have used one for test phase
        that have been exposed.</para>
      </listitem>

      <listitem>
        <para>Make sure you have the latest security upgrades on your OS,
        and</para>
      </listitem>

      <listitem>
        <para>Make sure you run on HTTPS and not HTTP.</para>
      </listitem>

      <listitem>
        <para>Block access to your servers anything except port 443.
        simpleSAMLphp does not do anything but plan HTTP(s), so no need to
        open ports for SOAP or other communication.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Error handling, error reporting and metadata reporting</title>

    <para>Check out the extras folder for a script that can be embedded in a
    webpage and enable the possibility of sending UI errors to the
    administrators.</para>
  </section>

  <section>
    <title>Multi-language support</title>

    <para>Localization files in <filename>dictionaries/</filename>.</para>

    <para>To add support for a new language add your new language to the
    language.available configuration parameter in
    <filename>config.php</filename>:</para>

    <programlisting>	/*
	 * Languages available and what language is default
	 */
	'language.available'	=&gt; array('en', 'no', 'dk', 'es', 'xx'),
	'language.default'		=&gt; 'en',</programlisting>

    <para>Please use the standarized <ulink
    url="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">language codes
    as specified in ISO-639-1</ulink>.</para>

    <para>You also can set the default language. What is really important is
    that the default language is complete! The default language is also the
    fallback, so that when a user selects a language that in example has not
    translated all the error messages, then strings from the default languae
    is used instead.</para>

    <tip>
      <para>This may change in the future. We may distinguish between the
      fallback-lanauge (which usually are english) and the default
      language.</para>
    </tip>

    <para>Next, the translation it self needs to be done. All the strings can
    be localized by editing the files in <filename>dictionaries/</filename>.
    Add a new entry for each string, with your language code, like
    this:</para>

    <programlisting>'user_pass_header' =&gt; array(
  'en' =&gt; 'Enter your username and password',
  'no' =&gt; 'Skriv inn brukernavn og passord',
  'xx' =&gt; 'Pooa jujjique jamba',
),</programlisting>

    <para>You can translate as much as you would like, a full translation is
    not required. Though, it looks abit stupid with half of the text in
    english, and only half of the text localized.</para>
  </section>

  <section>
    <title>Customizing the web frontend with themes</title>

    <para>All XHTML templates are stored in the
    <filename>templates/</filename> directory. In this directory there is one
    directory for each theme. The default theme is named
    <literal>default</literal>. An example theme is provided named
    <literal>feidernd</literal>.</para>

    <para>It is possible to define a new theme, where only some of the pages
    is customized, for the rest of the pages, the default theme can be used.
    The feidernd theme is a good example of this, here only the login page is
    customized.</para>

    <para>In <filename>config.php</filename> you specify which theme that you
    would like to use, as well as a theme base. The theme base is the fallback
    theme that should be used when the selected theme does not include the
    specific template needed to render a page. Here is an example of a
    configuration:</para>

    <programlisting>	/*
	 * Which theme directory should be used? The base is fallback (leave it to default).
	 */
	'theme.use' 		=&gt; 'feidernd',
	'theme.base' 		=&gt; 'default',</programlisting>

    <important>
      <para>The feidernd theme is based on the wordpress login form style.
      Feel free to use this as a base for making your own login form. But
      please do not use the feidernd theme as it is, because it contains the
      Feide logo, which off course should not be used outside Feide.</para>
    </important>
  </section>

  <section>
    <title>Support</title>

    <para>If you have problems to get this work, or want to discuss
    simpleSAMLphp with other users of the software you are lucky! Around
    simpleSAMLphp there is a great Open source community, and you are welcome
    to join! Both for asking question, answer other questions, request
    improvements or contribute with code or plugins of your own.</para>

    <itemizedlist>
      <listitem>
        <para><ulink url="http://rnd.feide.no/simplesamlphp">simpleSAMLphp
        homepage (at Feide RnD)</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="http://rnd.feide.no/view/simplesamlphpdocs">List of
        all available simpleSAMLphp documentation</ulink></para>
      </listitem>

      <listitem>
        <para><ulink
        url="http://rnd.feide.no/content/simplesamlphp-users-mailinglist">Join
        the simpleSAMLphp user's mailing list</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="https://ow.feide.no/simplesamlphp:start">Visit and
        contribute to the simpleSAMLphp wiki</ulink></para>
      </listitem>
    </itemizedlist>
  </section>
</article>