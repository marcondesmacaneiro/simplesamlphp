<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article>
  <title>Setting up a simpleSAMLphp SAML 2.0 IdP to use with Google Apps for
  Education</title>

  <articleinfo>
    <date>2007-10-15</date>

    <pubdate>Sat Mar  8 22:40:15 2008</pubdate>

    <author>
      <firstname>Andreas Ã…kre</firstname>

      <surname>Solberg</surname>

      <email>andreas.solberg@uninett.no</email>
    </author>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>This article assumes that you have already read the simpleSAMLphp
    installation manual, and installed a version of simpleSAMLphp at your
    server.</para>

    <para>In this example we will setup this server as an IdP for Google Apps
    for Education:</para>

    <literallayout>dev2.andreas.feide.no</literallayout>
  </section>

  <section>
    <title>Setting up a SSL signing certificate</title>

    <para>For test purposes, you can skip this section, and use the included
    certificate.</para>

    <para>For a production system, uou must generate a new certificate for
    your IdP.</para>

    <warning>
      <para>There is a certificate that follows this package that you can use
      for test purposes, but off course <emphasis>NEVER</emphasis> use this in
      production as the private key is also included in the package and can be
      downloaded by anyone.</para>
    </warning>

    <para>Here is an examples of openssl commands to generate a new key and a
    selfsigned certificate to use for signing SAML messages:</para>

    <screen>openssl genrsa -des3 -out googleappsidp.key 1024 
openssl rsa -in googleappsidp.key -out googleappsidp.pem
openssl req -new -key googleappsidp.key -out googleappsidp.csr
openssl x509 -req -days 1095 -in googleappsidp.csr -signkey googleappsidp.key -out googleappsidp.crt</screen>

    <para>The certificate above will be valid for 1095 days (3 years).</para>

    <para>Here is an example of what can be typed in when creating a
    certificate request:</para>

    <screen>Country Name (2 letter code) [AU]:NO
State or Province Name (full name) [Some-State]:Trondheim
Locality Name (eg, city) []:Trondheim
Organization Name (eg, company) [Internet Widgits Pty Ltd]:UNINETT
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:dev2.andreas.feide.no
Email Address []:

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:</screen>

    <note>
      <para>simpleSAMLphp will only work with RSA and not DSA
      certificates.</para>
    </note>
  </section>

  <section id="sect.authmodule">
    <title>Authentication modules</title>

    <para>You will need to connect the IdP to your existing user storage. For
    different technologies of user storage, there are different authentication
    modules.</para>

    <para>In the <filename>www/auth</filename> directory, you see multiple
    files, each representing an authentication module. In the IdP hosted
    metadata configuration you specify which authentication module that should
    be used for that specific IdP. You can implement your own authentication
    module, see the IdP documentation.</para>

    <para>These authentication modules are included:</para>

    <glosslist>
      <glossentry>
        <glossterm>auth/login.php</glossterm>

        <glossdef>
          <para>This is the standard LDAP backend authentication module, it
          uses LDAP configuration from the config.php file.</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>auth/login-ldapmulti.php</glossterm>

        <glossdef>
          <para>This authentication module lets you connect to multiple LDAPS
          depending on what organization the user selects in the login
          form.</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>auth/login-radius.php</glossterm>

        <glossdef>
          <para>This authentication module will authenticate users against an
          RADIUS server instead of LDAP.</para>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>auth/login-auto.php</glossterm>

        <glossdef>
          <para>This module will automatically login the user with some test
          details. You can use this to test the IdP functionality if you do
          not have</para>

          <para>This module is not completed yet. Work in progress.</para>
        </glossdef>
      </glossentry>
    </glosslist>

    <section>
      <title>Configuring the LDAP authentication module</title>

      <para>The LDAP module is <filename>auth/login.php</filename>.</para>

      <para>If you want to perform local authentication on this server, and
      you want to use the LDAP authenticaiton plugin, then you need to
      configure the following parameters in
      <filename>config.php</filename>:</para>

      <itemizedlist>
        <listitem>
          <para><literal>auth.ldap.dnpattern</literal>: What DN should you
          bind to? Replacing %username% with the username the user types
          in.</para>
        </listitem>

        <listitem>
          <para><literal>auth.ldap.hostname</literal>: The hostname of the
          LDAP server</para>
        </listitem>

        <listitem>
          <para><literal>auth.ldap.attributes</literal>: A list of attributes
          that will be retrieved from LDAP. Setting this option to
          <literal>null</literal> will retrieve all attributes.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Configuring the multi-LDAP authenticaiton module</title>

      <para>The module is
      <filename>auth/login-ldapmulti.php</filename>.</para>

      <note>
        <para>Documentation will be added later. For now, contact the
        author.</para>
      </note>
    </section>
  </section>

  <section>
    <title>Configuring metadata for an SAML 2.0 IdP</title>

    <para>If you want to setup a SAML 2.0 IdP for Google Apps, you need to
    configure two metadata files: <filename>saml20-idp-hosted.php</filename>
    and <filename>saml20-sp-remote.php</filename>.</para>

    <section>
      <title>Configuring SAML 2.0 IdP Hosted metadata</title>

      <para>This is the configuration of the IdP itself. Here is some example
      config:</para>

      <programlisting>	// The SAML entity ID is the index of this config.
	'dev2.andreas.feide.no' =&gt; array(
	
		// The hostname of the server (VHOST) that this SAML entity will use.
		'host'				=&gt;	'sp.example.org',
		
		// X.509 key and certificate. Relative to the cert directory.
		'privatekey'		=&gt;	'googleappsidp.pem',
		'certificate'		=&gt;	'googleappsidp.crt',
		
		// Authentication plugin to use. login.php is the default one that uses LDAP.
		'auth'				=&gt;	'auth/login.php',
     'authority' =&gt; 'login'
	)</programlisting>

      <para>Here are some details of each of the parameters:</para>

      <glosslist>
        <glossentry>
          <glossterm>index (index of array)</glossterm>

          <glossdef>
            <para>The entity ID of the IdP. In this example this value is set
            to: <literal>dev2.andreas.feide.no</literal>.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>host</glossterm>

          <glossdef>
            <para>The hostname of the server running this IdP, in this case:
            <literal>dev2.andreas.feide.no</literal>.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>privatekey</glossterm>

          <glossdef>
            <para>Pointing to the private key in PEM format, in the certs
            directory. Remeber we created the <literal>googleappsidp</literal>
            key?</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>certificate</glossterm>

          <glossdef>
            <para>Pointing to the certificate file in PEM format, in the certs
            directory. Remeber we created the <literal>googleappsidp</literal>
            key?</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>auth</glossterm>

          <glossdef>
            <para>Which authentication module to use? Default is:
            <filename>auth/login.php</filename> which is the LDAP
            authentication module. See the <xref linkend="sect.authmodule" />
            for more information on the authentication modules.</para>
          </glossdef>
        </glossentry>

        <glossentry>
          <glossterm>authority</glossterm>

          <glossdef>
            <para>This refer to the ID of the authentication module you are
            using. Set this value if you only allow one authentication
            module.</para>
          </glossdef>
        </glossentry>
      </glosslist>
    </section>

    <section>
      <title>Configuring SAML 2.0 SP Remote metadata</title>

      <para>In the (saml20-sp-remote.php) file we will configure an entry for
      Google Apps for education. There is already an entry for Google Apps in
      the template, but we will change the domain name:</para>

      <programlisting>	/*
	 * This example shows an example config that works with Google Apps for education.
	 * What is important is that you have an attribute in your IdP that maps to the local part of the email address
	 * at Google Apps. In example, if your google account is foo.com, and you have a user that has an email john@foo.com, then you
	 * must set the simplesaml.nameidattribute to be the name of an attribute that for this user has the value of 'john'.
	 */
	'google.com' =&gt; array(
		'AssertionConsumerService'	=&gt;	'https://www.google.com/a/g.feide.no/acs', 
		'spNameQualifier' 				=&gt;	'google.com',
		'NameIDFormat'					=&gt;	'urn:oasis:names:tc:SAML:2.0:nameid-format:email',
		'simplesaml.nameidattribute'	=&gt;	'uid',
		'simplesaml.attributes'			=&gt;	false
	),</programlisting>

      <para>You also need to map some attribute from the IdP into the email
      field sent to Google Apps. The attributes comes from the authentication
      module, and in this example we have an LDAP that returns the uid
      attribute. The uid attribute contains the local part of</para>

      <para>What you need to do is modify the
      <literal>AssertionConsumerService</literal> to include your Google Apps
      domain name instead of <literal>g.feide.no</literal>.</para>

      <para>To understand what the different parameters mean, see in the
      <ulink url="simplesamlphp-idp.html">simpleSAMLphp IdP
      documentation</ulink>.</para>
    </section>
  </section>

  <section>
    <title>Configure Google Apps for education</title>

    <para>Now, we are ready to configure Google Apps to use our IdP. We start
    by logging in to our Google Apps for education account panel. We then go
    to "Advanced tools":</para>

    <figure>
      <title>We go to advanced tools</title>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/simplesamlphp-googleapps/googleapps-menu.png" />
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>Then we go to "Set up single sign-on (SSO)":</para>

    <figure>
      <title>We go to setup SSO</title>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/simplesamlphp-googleapps/googleapps-sso.png" />
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>Then, we start off by uploading a certificate, and we upload the
    certificate we created in an earlier section, the googleappsidp.crt
    file:</para>

    <figure>
      <title>Uploading certificate</title>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/simplesamlphp-googleapps/googleapps-cert.png" />
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>Then we need to fill out the remaining fields:</para>

    <para>The important field to fill out is the Sign-in page URL. Set it to
    something similar to:</para>

    <literallayout>http://dev2.andreas.feide.no/simplesaml/saml2/idp/SSOService.php</literallayout>

    <para>but use the hostname of your IdP server.</para>

    <para>You will also need to configure the IdP initiated Single LogOut
    endpoint of your server. This endpoint takes a RelayState parameter, which
    is the URL to redirect the user to after successfull logout. Here is the
    reccomended value:</para>

    <literallayout>http://dev2.andreas.feide.no/simplesaml/saml2/idp/initSLO.php?RelayState=/simplesaml/logout.html</literallayout>

    <para>The Sign-out page or change password url can be static pages on your
    server.</para>

    <para>The network mask, is which IP addresses that will be asked for SSO
    login. IP addresses that do not match this mask will be presented with the
    normal Google Apps login page. I think you can leave this field empty to
    enable authentication for all URLs.</para>

    <figure>
      <title>Fill out the remaining fields</title>

      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/simplesamlphp-googleapps/googleapps-ssoconfig.png" />
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <section>
      <title>Add a user in Google Apps that is also in the IdP</title>

      <para>Add a new user in Google Apps, before we can test login. This user
      needs to have the mail field to match the email prefix mapped from the
      attribute as described in the metadata section.</para>
    </section>
  </section>

  <section>
    <title>Test to login to Google Apps for education</title>

    <para>Go to the URL of your mail account for this domain, the URL is
    similar to the following:</para>

    <literallayout>http://mail.google.com/a/yourgoogleappsdomain.com</literallayout>

    <para>but remember to replace with your own google apps domain
    name.</para>
  </section>

  <section>
    <title>Security Considerations</title>

    <para>You should make sure that your IdP server runs on HTTPS (SSL). Check
    the Apache documentation if you need to know how to configure that.</para>

    <para>And make sure you have switched away from the default certificate
    that follows the simpleSAMLphp distribution.</para>
  </section>

  <section>
    <title>Support</title>

    <para>If you have problems to get this work, or want to discuss
    simpleSAMLphp with other users of the software you are lucky! Around
    simpleSAMLphp there is a great Open source community, and you are welcome
    to join! Both for asking question, answer other questions, request
    improvements or contribute with code or plugins of your own.</para>

    <para>Visit the project page of simpleSAMLphp at: <ulink
    url="http://code.google.com/p/simplesamlphp/">http://code.google.com/p/simplesamlphp/</ulink></para>
  </section>
</article>